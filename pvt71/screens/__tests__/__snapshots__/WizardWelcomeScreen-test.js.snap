// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Wizard WelcomeScreen tests Wizard WelcomeScreen tests renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WizardWelcomeScreen />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Component
          style={
            Object {
              "flex": 1,
              "fontSize": 35,
              "justifyContent": "flex-start",
              "left": 10,
              "marginTop": 50,
            }
          }
        >
          Välkommen!
        </Component>,
        <Component
          style={
            Object {
              "fontSize": 20,
              "marginBottom": 50,
              "paddingLeft": 10,
            }
          }
        >
           
          Innan du kan börja använda applikationen behöver du sätta några grundläggande inställningar som nödkontakt, timerintervall och varningstimerintervall.
        </Component>,
        <Component
          style={
            Object {
              "flex": 1,
              "justifyContent": "flex-end",
            }
          }
        >
          <AppSingleButton
            onPress={[Function]}
            title="Nästa"
          />
        </Component>,
      ],
      "style": Object {
        "backgroundColor": "#fff",
        "flex": 1,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Välkommen!",
          "style": Object {
            "flex": 1,
            "fontSize": 35,
            "justifyContent": "flex-start",
            "left": 10,
            "marginTop": 50,
          },
        },
        "ref": null,
        "rendered": "Välkommen!",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            " ",
            "Innan du kan börja använda applikationen behöver du sätta några grundläggande inställningar som nödkontakt, timerintervall och varningstimerintervall.",
          ],
          "style": Object {
            "fontSize": 20,
            "marginBottom": 50,
            "paddingLeft": 10,
          },
        },
        "ref": null,
        "rendered": Array [
          " ",
          "Innan du kan börja använda applikationen behöver du sätta några grundläggande inställningar som nödkontakt, timerintervall och varningstimerintervall.",
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <AppSingleButton
            onPress={[Function]}
            title="Nästa"
          />,
          "style": Object {
            "flex": 1,
            "justifyContent": "flex-end",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onPress": [Function],
            "title": "Nästa",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Component
            style={
              Object {
                "flex": 1,
                "fontSize": 35,
                "justifyContent": "flex-start",
                "left": 10,
                "marginTop": 50,
              }
            }
          >
            Välkommen!
          </Component>,
          <Component
            style={
              Object {
                "fontSize": 20,
                "marginBottom": 50,
                "paddingLeft": 10,
              }
            }
          >
             
            Innan du kan börja använda applikationen behöver du sätta några grundläggande inställningar som nödkontakt, timerintervall och varningstimerintervall.
          </Component>,
          <Component
            style={
              Object {
                "flex": 1,
                "justifyContent": "flex-end",
              }
            }
          >
            <AppSingleButton
              onPress={[Function]}
              title="Nästa"
            />
          </Component>,
        ],
        "style": Object {
          "backgroundColor": "#fff",
          "flex": 1,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Välkommen!",
            "style": Object {
              "flex": 1,
              "fontSize": 35,
              "justifyContent": "flex-start",
              "left": 10,
              "marginTop": 50,
            },
          },
          "ref": null,
          "rendered": "Välkommen!",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              " ",
              "Innan du kan börja använda applikationen behöver du sätta några grundläggande inställningar som nödkontakt, timerintervall och varningstimerintervall.",
            ],
            "style": Object {
              "fontSize": 20,
              "marginBottom": 50,
              "paddingLeft": 10,
            },
          },
          "ref": null,
          "rendered": Array [
            " ",
            "Innan du kan börja använda applikationen behöver du sätta några grundläggande inställningar som nödkontakt, timerintervall och varningstimerintervall.",
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <AppSingleButton
              onPress={[Function]}
              title="Nästa"
            />,
            "style": Object {
              "flex": 1,
              "justifyContent": "flex-end",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "onPress": [Function],
              "title": "Nästa",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
